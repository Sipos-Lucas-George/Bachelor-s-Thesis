datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String        @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    userSettings  UserSettings?
    userExpenses  Expense[]
}

model Account {
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

model UserSettings {
    id                    String @id @default(cuid())
    userId                String @unique
    income                Int
    level                 Int    @db.SmallInt
    individualOrHouseHold Int    @db.SmallInt
    essentials            Int    @db.SmallInt
    debt                  Int    @db.SmallInt
    discretionary         Int    @db.SmallInt
    savings               Int    @db.SmallInt
    currency              String @db.VarChar(1)

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum EnumPayment {
    Cash
    Card
}

enum EnumType {
    Essentials
    Debt
    Discretionary
}

enum EnumCategory {
    PersonalSpending
    Food
    Entertainment
    Transportation
    Utilities
    FamilyExpenses
    Housing
    Healthcare
    Insurance
    Travel
    Education
    Investments
    DebtPayments
    GiftsDonations
    Miscellaneous
    Other
}

model Expense {
    id          String       @id @default(cuid())
    userId      String
    date        DateTime     @db.Date
    description String       @db.VarChar(30)
    payment     EnumPayment
    type        EnumType
    category    EnumCategory
    amount      Decimal      @db.Decimal(11, 2)

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId, date], map: "index_for_eq")
    @@index([userId, date(ops: DateMinMaxMultiOps)], map: "index_for_between", type: Brin)
    @@index([payment])
    @@index([type])
    @@index([category])
}
